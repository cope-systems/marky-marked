version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8-browsers
    steps:
      - checkout
      - run: node -v
      - run: npm -v
      - run:
          name: Install dependencies
          command: npm install
      - run: 
          name: Run unit tests
          command: npm test
      - run: 
          name: Generate code coverage
          command: cat ./coverage/**/lcov.info | ./node_modules/codecov/bin/codecov
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_test_results:
          path: tmp/karma-results
  build:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Set git configs
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "patrick.fricano@icloud.com"
            git config user.name "CircleCi"
      - run: node -v
      - run: npm -v
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build production build
          command: npm run build
      - run:
          name: Commit build and push back to github
          command: |
            git add dist/*
            git commit --allow-empty -m "[ci] build"
            git push origin master --force
  deploy:
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          name: Set git configs
          command: |
            git config credential.helper 'cache --timeout=120'
            git config user.email "patrick.fricano@icloud.com"
            git config user.name "CircleCi"
      - run:
          name: Checkout gh-pages branch
          command: |
            git fetch
            git checkout gh-pages
            git rebase master
      - run:
          name: Push to gh-pages branch
          command: git push origin gh-pages
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master