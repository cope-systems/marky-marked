{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","marky.min.js","node_modules/marked/lib/marked.js","src/marky.js","src/modules/Button.js","src/modules/Element.js","src/modules/Marky.js","src/modules/custom-events.js","src/modules/dispatcher.js","src/modules/handlers.js","src/modules/mark.js","src/modules/operation.js","src/modules/parsers.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","marky","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","_marky","_marky2","./src/marky",2,"Lexer","options","tokens","links","marked","defaults","rules","block","normal","gfm","tables","InlineLexer","inline","renderer","Renderer","breaks","pedantic","Parser","token","escape","html","encode","replace","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","regex","opt","source","name","val","RegExp","noop","merge","target","key","arguments","Object","prototype","hasOwnProperty","src","callback","pending","highlight","lex","done","err","out","parse","type","text","lang","escaped","message","silent","newline","fences","hr","heading","nptable","lheading","blockquote","list","def","table","paragraph","bullet","item","_tag","lexer","top","bq","next","loose","cap","bull","b","space","exec","push","depth","header","split","align","cells","test","ordered","match","indexOf","smartLists","slice","join","sanitize","pre","sanitizer","href","title","charCodeAt","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_inside","_href","output","mangle","inLink","outputLink","codespan","smartypants","image","ch","Math","random","toString","langPrefix","quote","level","raw","headerPrefix","xhtml","body","listitem","tablerow","content","tablecell","flags","prot","decodeURIComponent","parser","reverse","tok","pop","peek","parseText","row","cell","j","setOptions","inlineLexer",3,"defineProperty","value","_Marky","Marky","./modules/Marky",4,"Button","undefined","_Element","Icon","create","Element","init","classNames","addClass","id","assign","icon","_len","iconClasses","Array","_key","appendTo","element","./Element",5,"register","document","createElement","prop","container","appendChild","_this","forEach","className","classList","add","removeClass","_this2","remove","listen","evt","cb","addEventListener",6,"_interopRequireWildcard","newObj","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_mark","_mark2","_dispatcher","dispatcher","_customEvents","_handlers","editor","mark","state","markdown","selection","index","action","update","num","undo","setSelectionRange","nextSibling","dispatchEvent","markychange","redo","arr","start","selectionStart","end","selectionEnd","indices","boldify","inlineHandler","range","markyupdate","italicize","strikitize","codify","quotify","blockHandler","markArr","headingify","display","linkify","insertHandler","alt","imageify","listify","listHandler","indentify","indentHandler","./custom-events","./dispatcher","./handlers","./mark",7,"CustomEvent","event","params","bubbles","cancelable","detail","createEvent","initCustomEvent","Event","markyblur","markyfocus","markyselect",8,"stateIndex","markedOptions","_marked2","newState","_operation2","_marked","_operation","./operation",9,"string","useMark","lastIndexOf","lineStart","_parsers","startOfLine","lineEnd","endOfLine","indexOfMatch","currentFormat","search","trim","lines","splitLines","newLines","line","newLine","joined","./parsers",10,"containers","getElementsByTagName","idArr","idIndex","children","getAttribute","toolbar","sort","dialogs","markyEditor","markyOutput","headingButton","_Button","preventDefault","blur","dialog","toggle","style","visibility","boldButton","focus","bold","italicButton","italic","strikethroughButton","strikethrough","codeButton","blockquoteButton","linkButton","imageButton","unorderedListButton","unorderedList","orderedListButton","orderedList","outdentButton","outdent","indentButton","indent","undoButton","contains","redoButton","fullscreenButton","./Button","./Marky",11,"fn","newVersion","shift",12,"str","matches","indicesOfMatches","prevIndex","lastIndexOfMatch","splitLinesBackward"],"mappings":"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","file":"marky.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nimport marky from './src/marky'\nmodule.exports = marky\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.marky = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';var _marky=require('./src/marky');var _marky2=_interopRequireDefault(_marky);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}module.exports=_marky2.default;\n\n},{\"./src/marky\":3}],2:[function(require,module,exports){\n(function (global){\n/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],3:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _Marky=require('./modules/Marky');var marky=new _Marky.Marky();exports.default=marky;\n\n},{\"./modules/Marky\":6}],4:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.Button=undefined;var _Element=require('./Element'); /**\n * Creates HTML button elements\n * @class\n * @requires Element\n * @param {String}      type    tag name for the element\n * @param {String}      title   title for the element\n * @param {String}      id      editor ID to associate with the element\n * @param {HTMLElement} relevant  element this element should have access to\n */var Icon=Object.create(_Element.Element);Icon.init=function(type,classNames){_Element.Element.init.call(this,'i');this.addClass(classNames);};var Button=exports.Button=Object.create(_Element.Element);Button.init=function(title,id){_Element.Element.init.call(this,'button',title,id);this.addClass([this.title,this.id]);this.assign('value',this.title);this.icon=Object.create(Icon);for(var _len=arguments.length,iconClasses=Array(_len>2?_len-2:0),_key=2;_key<_len;_key++){iconClasses[_key-2]=arguments[_key];}this.icon.init('i',iconClasses);this.icon.appendTo(this.element);};\n\n},{\"./Element\":5}],5:[function(require,module,exports){\n'use strict'; /**\n * Creates an HTML element with some built-in shortcut methods\n * @class\n * @param {String}      type    tag name for the element\n * @param {String}      title   title for the element\n * @param {String}      id      editor ID to associate with the element\n * @param {HTMLElement} relevant  element this element should have access to\n */ // export class Element {\n//   constructor (type, title = null, id = null, relevant = null) {\n//     this.title = title\n//     this.type = type\n//     this.id = id\n//     this.relevant = relevant\n//     this.element = this.register()\n//\n//   }\n//   register () {\n//     return document.createElement(this.type)\n//   }\n//   assign (prop, value) {\n//     this.element[prop] = value\n//   }\n//   appendTo (container) {\n//     container.appendChild(this.element)\n//   }\n//   addClass (classNames) {\n//     classNames.forEach((className) => {\n//       this.element.classList.add(className.replace(/[ ]/g, '-').toLowerCase())\n//     })\n//   }\n//   removeClass (classNames) {\n//     classNames.forEach((className) => {\n//       this.element.classList.remove(className.replace(/[ ]/g, '-').toLowerCase())\n//     })\n//   }\n//   listen (evt, cb) {\n//     this.element.addEventListener(evt, cb)\n//   }\n// }\nObject.defineProperty(exports,\"__esModule\",{value:true});var Element=exports.Element={init:function init(type){var title=arguments.length<=1||arguments[1]===undefined?null:arguments[1];var id=arguments.length<=2||arguments[2]===undefined?null:arguments[2];this.type=type;this.title=title;this.id=id;this.element=this.register();if(this.title)this.element.title=this.title;},register:function register(){return document.createElement(this.type);},assign:function assign(prop,value){this.element[prop]=value;},appendTo:function appendTo(container){container.appendChild(this.element);},addClass:function addClass(classNames){var _this=this;classNames.forEach(function(className){_this.element.classList.add(className.replace(/[ ]/g,'-').toLowerCase());});},removeClass:function removeClass(classNames){var _this2=this;classNames.forEach(function(className){_this2.element.classList.remove(className.replace(/[ ]/g,'-').toLowerCase());});},listen:function listen(evt,cb){this.element.addEventListener(evt,cb);}};\n\n},{}],6:[function(require,module,exports){\n'use strict'; /**\n * Marky Mark\n * Author: Patrick Fricano\n * https://www.github.com/patrickfatrick/marky-marked\n */Object.defineProperty(exports,\"__esModule\",{value:true});exports.Marky=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\" in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _mark=require('./mark');var _mark2=_interopRequireDefault(_mark);var _dispatcher=require('./dispatcher');var dispatcher=_interopRequireWildcard(_dispatcher);var _customEvents=require('./custom-events');var _handlers=require('./handlers');function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else {var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key))newObj[key]=obj[key];}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Marky=exports.Marky=function(){function Marky(editor,container){_classCallCheck(this,Marky);this.mark=_mark2.default;this.state=[{markdown:'',html:'',selection:[0,0]}];this.index=0;this.editor=editor;this.container=container;} /**\n   * Removes the container and all descendants from the DOM\n   * @param  {container} container the container used to invoke `mark()`\n   */_createClass(Marky,[{key:'destroy',value:function destroy(){var container=arguments.length<=0||arguments[0]===undefined?this.container:arguments[0];container.remove();} /**\n   * Handles updating the state on forward-progress changes\n   * @requires dispatcher/update\n   * @param {String} markdown the new markdown blob\n   * @param {Array}  state    the state timeline\n   * @param {Number} index    current state index\n   */},{key:'update',value:function update(markdown){var selection=arguments.length<=1||arguments[1]===undefined?[0,0]:arguments[1];var state=arguments.length<=2||arguments[2]===undefined?this.state:arguments[2];var index=arguments.length<=3||arguments[3]===undefined?this.index:arguments[3];var action=dispatcher.update(markdown,selection,state,index);this.state=action.state;this.index=action.index;} /**\n   * Handles moving backward in state\n   * @requires dispatcher/undo\n   * @param   {Number}      num    number of states to move back\n   * @param   {Array}       state  the state timeline\n   * @param   {Number}      index  current state index\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Number}      the new index\n   */},{key:'undo',value:function undo(){var num=arguments.length<=0||arguments[0]===undefined?1:arguments[0];var state=arguments.length<=1||arguments[1]===undefined?this.state:arguments[1];var index=arguments.length<=2||arguments[2]===undefined?this.index:arguments[2];var editor=arguments.length<=3||arguments[3]===undefined?this.editor:arguments[3];if(index===0)return index;var action=dispatcher.undo(num,state,index);this.index=action.index;editor.value=action.state.markdown;editor.setSelectionRange(action.state.selection[0],action.state.selection[1]);editor.nextSibling.value=action.state.html;editor.dispatchEvent(_customEvents.markychange);return this.index;} /**\n   * Handles moving forward in state\n   * @requires dispatcher/redo\n   * @param   {Number}      num    number of states to move back\n   * @param   {Array}       state  the state timeline\n   * @param   {Number}      index  current state index\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Number}      the new index\n   */},{key:'redo',value:function redo(){var num=arguments.length<=0||arguments[0]===undefined?1:arguments[0];var state=arguments.length<=1||arguments[1]===undefined?this.state:arguments[1];var index=arguments.length<=2||arguments[2]===undefined?this.index:arguments[2];var editor=arguments.length<=3||arguments[3]===undefined?this.editor:arguments[3];if(index===state.length-1)return index;var action=dispatcher.redo(num,state,index);this.index=action.index;editor.value=action.state.markdown;editor.setSelectionRange(action.state.selection[0],action.state.selection[1]);editor.nextSibling.value=action.state.html;editor.dispatchEvent(_customEvents.markychange);return this.index;} /**\n   * Setsa the selection indices in the editor\n   * @param   {Array}       arr    starting and ending indices\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the array that was passed in\n   */},{key:'setSelection',value:function setSelection(){var arr=arguments.length<=0||arguments[0]===undefined?[0,0]:arguments[0];var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];editor.setSelectionRange(arr[0],arr[1]);return arr;} /**\n   * expands the selection to the right\n   * @param   {Number}      num    number of characters to expand by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new selection indices\n   */},{key:'expandSelectionForward',value:function expandSelectionForward(){var num=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];var start=editor.selectionStart;var end=editor.selectionEnd+num;editor.setSelectionRange(start,end);return [start,end];} /**\n   * expands the selection to the left\n   * @param   {Number}      num    number of characters to expand by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new selection indices\n   */},{key:'expandSelectionBackward',value:function expandSelectionBackward(){var num=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];var start=editor.selectionStart-num;var end=editor.selectionEnd;editor.setSelectionRange(start,end);return [start,end];} /**\n   * expands the cursor to the right\n   * @param   {Number}      num    number of characters to move by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new cursor position\n   */},{key:'moveCursorBackward',value:function moveCursorBackward(){var num=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];var start=editor.selectionStart-num;editor.setSelectionRange(start,start);return start;} /**\n   * expands the cursor to the left\n   * @param   {Number}      num    number of characters to move by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new cursor position\n   */},{key:'moveCursorForward',value:function moveCursorForward(){var num=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];var start=editor.selectionStart+num;editor.setSelectionRange(start,start);return start;} /**\n   * implements a bold on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the bold\n   */},{key:'bold',value:function bold(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var boldify=(0,_handlers.inlineHandler)(editor.value,indices,'**');editor.value=boldify.value;editor.setSelectionRange(boldify.range[0],boldify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [boldify.range[0],boldify.range[1]];} /**\n   * implements an italic on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the italic\n   */},{key:'italic',value:function italic(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var italicize=(0,_handlers.inlineHandler)(editor.value,indices,'_');editor.value=italicize.value;editor.setSelectionRange(italicize.range[0],italicize.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [italicize.range[0],italicize.range[1]];} /**\n   * implements a strikethrough on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the strikethrough\n   */},{key:'strikethrough',value:function strikethrough(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var strikitize=(0,_handlers.inlineHandler)(editor.value,indices,'~~');editor.value=strikitize.value;editor.setSelectionRange(strikitize.range[0],strikitize.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [strikitize.range[0],strikitize.range[1]];} /**\n   * implements a code on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the code\n   */},{key:'code',value:function code(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var codify=(0,_handlers.inlineHandler)(editor.value,indices,'`');editor.value=codify.value;editor.setSelectionRange(codify.range[0],codify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [codify.range[0],codify.range[1]];} /**\n   * implements a blockquote on a selection\n   * @requires handlers/blockHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the bold\n   */},{key:'blockquote',value:function blockquote(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var quotify=(0,_handlers.blockHandler)(editor.value,indices,'> ');editor.value=quotify.value;editor.setSelectionRange(quotify.range[0],quotify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [quotify.range[0],quotify.range[1]];} /**\n   * implements a heading on a selection\n   * @requires handlers/blockHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the heading\n   */},{key:'heading',value:function heading(){var value=arguments.length<=0||arguments[0]===undefined?0:arguments[0];var indices=arguments[1];var editor=arguments.length<=2||arguments[2]===undefined?this.editor:arguments[2];indices=indices||[editor.selectionStart,editor.selectionEnd];var markArr=[];var mark=undefined;for(var i=1;i<=value;i++){markArr.push('#');}mark=markArr.join('');var space=mark?' ':'';var headingify=(0,_handlers.blockHandler)(editor.value,indices,mark+space);editor.value=headingify.value;editor.setSelectionRange(headingify.range[0],headingify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [headingify.range[0],headingify.range[1]];} /**\n   * inserts a link snippet at the end of a selection\n   * @requires handlers/insertHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the snippet is inserted\n   */},{key:'link',value:function link(indices){var url=arguments.length<=1||arguments[1]===undefined?'http://url.com':arguments[1];var display=arguments.length<=2||arguments[2]===undefined?'http://url.com':arguments[2];var editor=arguments.length<=3||arguments[3]===undefined?this.editor:arguments[3];indices=indices||[editor.selectionStart,editor.selectionEnd];var mark='['+display+']('+url+')';var linkify=(0,_handlers.insertHandler)(editor.value,indices,mark);editor.value=linkify.value;editor.setSelectionRange(linkify.range[0],linkify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [linkify.range[0],linkify.range[1]];} /**\n   * inserts an image snippet at the end of a selection\n   * @requires handlers/insertHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the snippet is inserted\n   */},{key:'image',value:function image(indices){var source=arguments.length<=1||arguments[1]===undefined?'http://imagesource.com/image.jpg':arguments[1];var alt=arguments.length<=2||arguments[2]===undefined?'http://imagesource.com/image.jpg':arguments[2];var editor=arguments.length<=3||arguments[3]===undefined?this.editor:arguments[3];indices=indices||[editor.selectionStart,editor.selectionEnd];var mark='!['+alt+']('+source+')';var imageify=(0,_handlers.insertHandler)(editor.value,indices,mark);editor.value=imageify.value;editor.setSelectionRange(imageify.range[0],imageify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [imageify.range[0],imageify.range[1]];} /**\n   * implements an unordered list on a selection\n   * @requires handlers/listHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the list is implemented\n   */},{key:'unorderedList',value:function unorderedList(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var listify=(0,_handlers.listHandler)(editor.value,indices,'ul');editor.value=listify.value;editor.setSelectionRange(listify.range[0],listify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [listify.range[0],listify.range[1]];} /**\n   * implements an ordered list on a selection\n   * @requires handlers/listHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the list is implemented\n   */},{key:'orderedList',value:function orderedList(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var listify=(0,_handlers.listHandler)(editor.value,indices,'ol');editor.value=listify.value;editor.setSelectionRange(listify.range[0],listify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [listify.range[0],listify.range[1]];} /**\n   * implements an indent on a selection\n   * @requires handlers/indentHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the indent is implemented\n   */},{key:'indent',value:function indent(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var indentify=(0,_handlers.indentHandler)(editor.value,indices,'in');editor.value=indentify.value;editor.setSelectionRange(indentify.range[0],indentify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [indentify.range[0],indentify.range[1]];} /**\n   * implements an outdent on a selection\n   * @requires handlers/indentHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the outdent is implemented\n   */},{key:'outdent',value:function outdent(indices){var editor=arguments.length<=1||arguments[1]===undefined?this.editor:arguments[1];indices=indices||[editor.selectionStart,editor.selectionEnd];var indentify=(0,_handlers.indentHandler)(editor.value,indices,'out');editor.value=indentify.value;editor.setSelectionRange(indentify.range[0],indentify.range[1]);var html=editor._marky.state[editor._marky.index].html;editor.nextSibling.value=html;editor.dispatchEvent(_customEvents.markyupdate);return [indentify.range[0],indentify.range[1]];}}]);return Marky;}();\n\n},{\"./custom-events\":7,\"./dispatcher\":8,\"./handlers\":9,\"./mark\":10}],7:[function(require,module,exports){\n/* global CustomEvent */'use strict';Object.defineProperty(exports,\"__esModule\",{value:true}); // Custom Event Polyfill for IE9+\n(function(){function CustomEvent(event,params){params=params||{bubbles:false,cancelable:false,detail:undefined};var evt=document.createEvent('CustomEvent');evt.initCustomEvent(event,params.bubbles,params.cancelable,params.detail);return evt;}CustomEvent.prototype=window.Event.prototype;window.CustomEvent=CustomEvent;})();var markyblur=exports.markyblur=new CustomEvent('markyblur');var markyfocus=exports.markyfocus=new CustomEvent('markyfocus');var markyselect=exports.markyselect=new CustomEvent('markyselect');var markyupdate=exports.markyupdate=new CustomEvent('markyupdate');var markychange=exports.markychange=new CustomEvent('markychange');\n\n},{}],8:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.update=update;exports.undo=undo;exports.redo=redo;var _marked=require('marked');var _marked2=_interopRequireDefault(_marked);var _operation=require('./operation');var _operation2=_interopRequireDefault(_operation);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};} /**\n * updates the state\n * @external marked\n * @requires operation\n * @param   {String} markdown   markdown blob\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */function update(markdown,selection,state,stateIndex){var markedOptions={sanitize:true};var html=(0,_marked2.default)(markdown,markedOptions).toString()||'';var newState=(0,_operation2.default)(state,stateIndex,function(){return {markdown:markdown,html:html,selection:selection};});return newState;} /**\n * moves backward in state\n * @param   {Number} num        the number of states to move back by\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */function undo(num,state,stateIndex){stateIndex=stateIndex>num-1?stateIndex-num:0;return {state:state[stateIndex],index:stateIndex};} /**\n * moves forwardin state\n * @param   {Number} num        the number of states to move back by\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */function redo(num,state,stateIndex){stateIndex=stateIndex<state.length-(num+1)?stateIndex+num:state.length-1;return {state:state[stateIndex],index:stateIndex};}\n\n},{\"./operation\":11,\"marked\":2}],9:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.inlineHandler=inlineHandler;exports.blockHandler=blockHandler;exports.listHandler=listHandler;exports.indentHandler=indentHandler;exports.insertHandler=insertHandler;var _parsers=require('./parsers'); /**\n * Handles wrapping format strings around a selection\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the format string to use\n * @returns {Object} the new string, the updated indices\n */function inlineHandler(string,indices,mark){var value=undefined;var useMark=[mark,mark];if(string.indexOf(mark)!==-1){indices.forEach(function(n,i){if(string.lastIndexOf(mark,n)===n-mark.length){string=string.substring(0,n-mark.length)+string.substring(n,string.length);if(i===0){indices[0]=indices[0]-mark.length;indices[1]=indices[1]-mark.length;}else {indices[1]=indices[1]-mark.length;}if(i===1&&useMark[0])indices[1]=indices[1]+mark.length;useMark[i]='';}if(string.indexOf(mark,n)===n){string=string.substring(0,n)+string.substring(n+mark.length,string.length);if(i===0&&indices[0]!==indices[1]){indices[1]=indices[1]-mark.length;}if(i===0&&indices[0]===indices[1]){indices[0]=indices[0]-mark.length;}if(i===1&&useMark[0])indices[1]=indices[1]+mark.length;useMark[i]='';}});}value=string.substring(0,indices[0])+useMark[0]+string.substring(indices[0],indices[1])+useMark[1]+string.substring(indices[1],string.length);return {value:value,range:[indices[0]+useMark[0].length,indices[1]+useMark[1].length]};} /**\n * Handles adding/removing a format string to a line\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the format string to use\n * @returns {Object} the new string, the updated indices\n */function blockHandler(string,indices,mark){var start=indices[0];var end=indices[1];var value=undefined;var lineStart=(0,_parsers.startOfLine)(string,start);var lineEnd=(0,_parsers.endOfLine)(string,end);if((0,_parsers.indexOfMatch)(string,/^[#>]/m,lineStart)===lineStart){var currentFormat=string.substring(lineStart,lineStart+string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm));value=string.substring(0,lineStart)+string.substring(lineStart+string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm),string.length);lineEnd=lineEnd-currentFormat.length;if(currentFormat.trim()!==mark.trim()&&mark.trim().length){value=string.substring(0,lineStart)+mark+string.substring(lineStart+string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm),string.length);lineStart=lineStart+mark.length;lineEnd=lineEnd+mark.length;}return {value:value,range:[lineStart,lineEnd]};}value=string.substring(0,lineStart)+mark+string.substring(lineStart,string.length);return {value:value,range:[start+mark.length,end+mark.length]};} /**\n * Handles adding/removing format strings to groups of lines\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} type    ul or ol\n * @returns {Object} the new string, the updated indices\n */function listHandler(string,indices,type){var start=(0,_parsers.startOfLine)(string,indices[0]);var end=(0,_parsers.endOfLine)(string,indices[1]);var lines=(0,_parsers.splitLines)(string.substring(start,end));var newLines=[];var value=undefined;lines.forEach(function(line,i){var mark=type==='ul'?'-'+' ':i+1+'.'+' ';var newLine=undefined;if((0,_parsers.indexOfMatch)(line,/^[0-9#>-]/m,0)===0){var currentFormat=line.substring(0,0+line.substring(0).search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm));newLine=line.substring(line.search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm),line.length);if(currentFormat.trim()!==mark.trim()){newLine=mark+line.substring(line.search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm),line.length);}return newLines.push(newLine);}newLine=mark+line.substring(0,line.length);return newLines.push(newLine);});var joined=newLines.join('\\r\\n');value=string.substring(0,start)+newLines.join('\\r\\n')+string.substring(end,string.length);return {value:value,range:[start,start+joined.replace(/\\n/gm,'').length]};} /**\n * Handles adding/removing indentation to groups of lines\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} type    in or out\n * @returns {Object} the new string, the updated indices\n */function indentHandler(string,indices,type){var start=(0,_parsers.startOfLine)(string,indices[0]);var end=(0,_parsers.endOfLine)(string,indices[1]);var lines=(0,_parsers.splitLines)(string.substring(start,end));var newLines=[];var value=undefined;lines.forEach(function(line){var mark='    ';var newLine=undefined;if(type==='out'){newLine=line.indexOf(mark,0)===0?line.substring(mark.length,line.length):line.substring(line.search(/[~*`_[!#>-]|[a-zA-Z0-9]|\\r|\\n|$/gm),line.length);return newLines.push(newLine);}newLine=mark+line.substring(0,line.length);return newLines.push(newLine);});var joined=newLines.join('\\r\\n');value=string.substring(0,start)+newLines.join('\\r\\n')+string.substring(end,string.length);return {value:value,range:[start,start+joined.replace(/\\n/gm,'').length]};} /**\n * Handles inserting a snippet at the end of a selection\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the snippet to insert\n * @returns {Object} the new string, the updated indices\n */function insertHandler(string,indices,mark){var start=indices[0];var end=indices[1];var value=undefined;value=string.substring(0,start)+mark+string.substring(end,string.length);return {value:value,range:[start,start+mark.length]};}\n\n},{\"./parsers\":12}],10:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=function(){var _this=this;var tag=arguments.length<=0||arguments[0]===undefined?'marky-mark':arguments[0];var containers=document.getElementsByTagName(tag);var idArr=[];return Array.prototype.forEach.call(containers,function(container,i){var idIndex=i;if(container.children.length){if(container.getAttribute('id'))idArr.push(parseInt(container.getAttribute('id').split('-')[2]));return;} // let toolbar = new Element('div', 'Toolbar')\nvar toolbar=Object.create(_Element.Element);toolbar.type='div';toolbar.element=toolbar.register();toolbar.element.title='Toolbar';if(idArr.length){idArr.sort();idIndex=idArr[idArr.length-1]+1;}var id='marky-mark-'+idIndex;container.id=id;toolbar.addClass(['marky-toolbar',id]); // let dialogs = new Element('div', 'Dialogs')\nvar dialogs=Object.create(_Element.Element);dialogs.type='div';dialogs.element=dialogs.register();dialogs.element.title='Dialogs';dialogs.addClass(['marky-dialogs',id]); // let markyEditor = new Element('textarea', 'Marky Marked Editor')\nvar markyEditor=Object.create(_Element.Element);markyEditor.type='textarea';markyEditor.element=markyEditor.register();markyEditor.element.title='Marky Marked Editor';markyEditor.addClass(['marky-editor',id]);markyEditor.assign('_marky',new _Marky.Marky(markyEditor.element,container)); // let markyOutput = new Element('input', 'Marky Marked Output')\nvar markyOutput=Object.create(_Element.Element);markyOutput.type='input';markyOutput.element=markyOutput.register();markyOutput.element.title='Marky Marked Output';markyOutput.assign('type','hidden');markyOutput.addClass(['marky-output',id]); // let headingDialog = new HeadingDialog('div', 'Heading Dialog', id, markyEditor)\n// headingDialog.element.style.visibility = 'hidden'\n// let linkDialog = new LinkDialog('div', 'Link Dialog', id, markyEditor)\n// linkDialog.element.style.visibility = 'hidden'\n// let imageDialog = new ImageDialog('div', 'Image Dialog', id, markyEditor)\n// imageDialog.element.style.visibility = 'hidden'\n// let headingButton = new HeadingButton('button', 'Heading', id, headingDialog)\nvar headingButton=Object.create(_Button.Button);headingButton.init('Headings',id,'fa','fa-header');headingButton.listen('click',function(e){e.preventDefault();_this.element.blur();headingButton.dialog.classList.toggle('toggled');if(headingButton.dialog.style.visibility==='hidden'){headingButton.dialog.style.visibility='visible';return;}headingButton.dialog.style.visibility='hidden';}); // headingButton.listen('click', function () {\n//   imageDialog.element.style.visibility = 'hidden'\n//   imageDialog.removeClass(['toggled'])\n//   linkDialog.element.style.visibility = 'hidden'\n//   linkDialog.removeClass(['toggled'])\n// })\n// let boldButton = new BoldButton('button', 'Bold', id, markyEditor)\n// let italicButton = new ItalicButton('button', 'Italic', id, markyEditor)\n// let strikethroughButton = new StrikethroughButton('button', 'Strikethrough', id, markyEditor)\n// let codeButton = new CodeButton('button', 'Code', id, markyEditor)\n// let blockquoteButton = new BlockquoteButton('button', 'Blockquote', id, markyEditor)\nvar boldButton=Object.create(_Button.Button);boldButton.init('Bold',id,'fa','fa-bold');boldButton.editor=markyEditor.element;boldButton.listen('mousedown',function(e){e.preventDefault();boldButton.editor.focus();return boldButton.addClass(['active']);});boldButton.listen('mouseup',function(){return boldButton.removeClass(['active']);});boldButton.listen('click',function(e){e.preventDefault();boldButton.editor.focus();return boldButton.editor._marky.bold([boldButton.editor.selectionStart,boldButton.editor.selectionEnd]);});var italicButton=Object.create(_Button.Button);italicButton.init('Italic',id,'fa','fa-italic');italicButton.editor=markyEditor.element;italicButton.listen('mousedown',function(e){e.preventDefault();italicButton.editor.focus();return italicButton.addClass(['active']);});italicButton.listen('mouseup',function(){return italicButton.removeClass(['active']);});italicButton.listen('click',function(e){e.preventDefault();italicButton.editor.focus();return italicButton.editor._marky.italic([italicButton.editor.selectionStart,italicButton.editor.selectionEnd]);});var strikethroughButton=Object.create(_Button.Button);strikethroughButton.init('Italic',id,'fa','fa-strikethrough');strikethroughButton.editor=markyEditor.element;strikethroughButton.listen('mousedown',function(e){e.preventDefault();strikethroughButton.editor.focus();return strikethroughButton.addClass(['active']);});strikethroughButton.listen('mouseup',function(){return strikethroughButton.removeClass(['active']);});strikethroughButton.listen('click',function(e){e.preventDefault();strikethroughButton.editor.focus();return strikethroughButton.editor._marky.strikethrough([strikethroughButton.editor.selectionStart,strikethroughButton.editor.selectionEnd]);});var codeButton=Object.create(_Button.Button);codeButton.init('Code',id,'fa','fa-code');codeButton.editor=markyEditor.element;codeButton.listen('mousedown',function(e){e.preventDefault();codeButton.editor.focus();return codeButton.addClass(['active']);});codeButton.listen('mouseup',function(){return codeButton.removeClass(['active']);});codeButton.listen('click',function(e){e.preventDefault();codeButton.editor.focus();return codeButton.editor._marky.code([codeButton.editor.selectionStart,codeButton.editor.selectionEnd]);});var blockquoteButton=Object.create(_Button.Button);blockquoteButton.init('Blockquote',id,'fa','fa-quote-right');blockquoteButton.editor=markyEditor.element;blockquoteButton.listen('mousedown',function(e){e.preventDefault();blockquoteButton.editor.focus();return blockquoteButton.addClass(['active']);});blockquoteButton.listen('mouseup',function(){return blockquoteButton.removeClass(['active']);});blockquoteButton.listen('click',function(e){e.preventDefault();blockquoteButton.editor.focus();return blockquoteButton.editor._marky.blockquote([blockquoteButton.editor.selectionStart,blockquoteButton.editor.selectionEnd]);});var linkButton=Object.create(_Button.Button);linkButton.init('Link',id,'fa','fa-link');linkButton.editor=markyEditor.element;linkButton.listen('mousedown',function(e){e.preventDefault();linkButton.editor.focus();return linkButton.addClass(['active']);});linkButton.listen('mouseup',function(){return linkButton.removeClass(['active']);});linkButton.listen('click',function(e){e.preventDefault();linkButton.editor.focus(); // dialog.classList.toggle('toggled')\n// if (dialog.style.visibility === 'hidden') {\n//   dialog.children[0].children[1].value = linkButton.editor.value.substring(linkButton.editor.selectionStart, linkButton.editor.selectionEnd)\n//   dialog.style.visibility = 'visible'\n//   return\n// }\n// dialog.style.visibility = 'hidden'\n});var imageButton=Object.create(_Button.Button);imageButton.init('Image',id,'fa','fa-file-image-o');imageButton.editor=markyEditor.element;imageButton.listen('mousedown',function(e){e.preventDefault();imageButton.editor.focus();return imageButton.addClass(['active']);});imageButton.listen('mouseup',function(){return imageButton.removeClass(['active']);});imageButton.listen('click',function(e){e.preventDefault();imageButton.editor.focus(); // dialog.classList.toggle('toggled')\n// if (dialog.style.visibility === 'hidden') {\n//   dialog.children[0].children[1].value = imageButton.editor.value.substring(imageButton.editor.selectionStart, imageButton.editor.selectionEnd)\n//   dialog.style.visibility = 'visible'\n//   return\n// }\n// dialog.style.visibility = 'hidden'\n});var unorderedListButton=Object.create(_Button.Button);unorderedListButton.init('Unordered List',id,'fa','fa-list-ul');unorderedListButton.editor=markyEditor.element;unorderedListButton.listen('mousedown',function(e){e.preventDefault();unorderedListButton.editor.focus();return unorderedListButton.addClass(['active']);});unorderedListButton.listen('mouseup',function(){return unorderedListButton.removeClass(['active']);});unorderedListButton.listen('click',function(e){e.preventDefault();unorderedListButton.editor.focus();return unorderedListButton.editor._marky.unorderedList([unorderedListButton.editor.selectionStart,unorderedListButton.editor.selectionEnd]);});var orderedListButton=Object.create(_Button.Button);orderedListButton.init('Ordered List',id,'fa','fa-list-ol');orderedListButton.editor=markyEditor.element;orderedListButton.listen('mousedown',function(e){e.preventDefault();orderedListButton.editor.focus();return orderedListButton.addClass(['active']);});orderedListButton.listen('mouseup',function(){return orderedListButton.removeClass(['active']);});orderedListButton.listen('click',function(e){e.preventDefault();orderedListButton.editor.focus();return orderedListButton.editor._marky.orderedList([orderedListButton.editor.selectionStart,orderedListButton.editor.selectionEnd]);});var outdentButton=Object.create(_Button.Button);outdentButton.init('Outdent',id,'fa','fa-outdent');outdentButton.editor=markyEditor.element;outdentButton.listen('mousedown',function(e){e.preventDefault();outdentButton.editor.focus();return outdentButton.addClass(['active']);});outdentButton.listen('mouseup',function(){return outdentButton.removeClass(['active']);});outdentButton.listen('click',function(e){e.preventDefault();outdentButton.editor.focus();return outdentButton.editor._marky.outdent([outdentButton.editor.selectionStart,outdentButton.editor.selectionEnd]);});var indentButton=Object.create(_Button.Button);indentButton.init('Indent',id,'fa','fa-indent');indentButton.editor=markyEditor.element;indentButton.listen('mousedown',function(e){e.preventDefault();indentButton.editor.focus();return indentButton.addClass(['active']);});indentButton.listen('mouseup',function(){return indentButton.removeClass(['active']);});indentButton.listen('click',function(e){e.preventDefault();indentButton.editor.focus();return indentButton.editor._marky.indent([indentButton.editor.selectionStart,indentButton.editor.selectionEnd]);});var undoButton=Object.create(_Button.Button);undoButton.init('Undo',id,'fa','fa-backward');undoButton.editor=markyEditor.element;undoButton.listen('mousedown',function(e){e.preventDefault();undoButton.editor.focus();return undoButton.addClass(['active']);});undoButton.listen('mouseup',function(){return undoButton.removeClass(['active']);});undoButton.listen('click',function(e){e.preventDefault();if(undoButton.element.classList.contains('disabled'))return;undoButton.editor.focus();return undoButton.editor._marky.undo(1,undoButton.editor._marky.state,undoButton.editor._marky.index);});var redoButton=Object.create(_Button.Button);redoButton.init('Redo',id,'fa','fa-forward');redoButton.editor=markyEditor.element;redoButton.listen('mousedown',function(e){e.preventDefault();redoButton.editor.focus();return redoButton.addClass(['active']);});redoButton.listen('mouseup',function(){return redoButton.removeClass(['active']);});redoButton.listen('click',function(e){e.preventDefault();if(redoButton.element.classList.contains('disabled'))return;redoButton.editor.focus();return redoButton.editor._marky.redo(1,redoButton.editor._marky.state,redoButton.editor._marky.index);});var fullscreenButton=Object.create(_Button.Button);fullscreenButton.init('Fullscreen',id,'fa','fa-expand');fullscreenButton.editor=markyEditor.element;fullscreenButton.listen('click',function(e){e.preventDefault();fullscreenButton.element.blur();container.classList.toggle('fullscreen-toggled');fullscreenButton.editor.classList.toggle('fullscreen-toggled');fullscreenButton.element.classList.toggle('fullscreen-toggled');fullscreenButton.icon.element.classList.toggle('fa-expand');fullscreenButton.icon.element.classList.toggle('fa-compress');return;}); // let linkButton = new LinkButton('button', 'Link', id, [linkDialog, markyEditor])\n// linkButton.listen('click', function () {\n//   imageDialog.element.style.visibility = 'hidden'\n//   imageDialog.removeClass(['toggled'])\n//   headingDialog.element.style.visibility = 'hidden'\n//   headingDialog.removeClass(['toggled'])\n// })\n// let imageButton = new ImageButton('button', 'Image', id, [imageDialog, markyEditor])\n// imageButton.listen('click', function () {\n//   linkDialog.element.style.visibility = 'hidden'\n//   linkDialog.removeClass(['toggled'])\n//   headingDialog.element.style.visibility = 'hidden'\n//   headingDialog.removeClass(['toggled'])\n// })\n// let unorderedListButton = new UnorderedListButton('button', 'Unordered List', id, markyEditor)\n// let orderedListButton = new OrderedListButton('button', 'Ordered List', id, markyEditor)\n// let outdentButton = new OutdentButton('button', 'Outdent', id, markyEditor)\n// let indentButton = new IndentButton('button', 'Indent', id, markyEditor)\n// let undoButton = new UndoButton('button', 'Undo', id, markyEditor)\n// let redoButton = new RedoButton('button', 'Redo', id, markyEditor)\n// let fullscreenButton = new FullscreenButton('button', 'Fullscreen', id, [container, markyEditor])\n// let separatorA = new Element('span')\n// separatorA.addClass(['separator'])\n// let separatorB = new Element('span')\n// separatorB.addClass(['separator'])\n// let separatorC = new Element('span')\n// separatorC.addClass(['separator'])\n// let separatorD = new Element('span')\n// separatorD.addClass(['separator'])\n// let separatorE = new Element('span')\n// separatorE.addClass(['separator'])\ntoolbar.appendTo(container);markyEditor.appendTo(container);markyOutput.appendTo(container);headingButton.appendTo(toolbar.element); // separatorA.appendTo(toolbar.element)\nboldButton.appendTo(toolbar.element);italicButton.appendTo(toolbar.element);strikethroughButton.appendTo(toolbar.element);codeButton.appendTo(toolbar.element);blockquoteButton.appendTo(toolbar.element); // separatorB.appendTo(toolbar.element)\nlinkButton.appendTo(toolbar.element);imageButton.appendTo(toolbar.element); // separatorC.appendTo(toolbar.element)\nunorderedListButton.appendTo(toolbar.element);orderedListButton.appendTo(toolbar.element);outdentButton.appendTo(toolbar.element);indentButton.appendTo(toolbar.element); // separatorD.appendTo(toolbar.element)\nundoButton.appendTo(toolbar.element);redoButton.appendTo(toolbar.element); // separatorE.appendTo(toolbar.element)\nfullscreenButton.appendTo(toolbar.element); // dialogs.appendTo(toolbar.element)\n// linkDialog.appendTo(dialogs.element)\n// imageDialog.appendTo(dialogs.element)\n// headingDialog.appendTo(dialogs.element)\n//   markyEditor.listen('markyupdate', function (e) {\n//     this._marky.update(e.target.value, [e.target.selectionStart, e.target.selectionEnd], this._marky.state, this._marky.index)\n//     e.target.dispatchEvent(markychange)\n//   }, false)\n//   markyEditor.listen('markychange', function (e) {\n//     let html = this._marky.state[this._marky.index].html\n//     if (this._marky.index === 0) {\n//       undoButton.addClass(['disabled'])\n//     } else {\n//       undoButton.removeClass(['disabled'])\n//     }\n//     if (this._marky.index === this._marky.state.length - 1) {\n//       redoButton.addClass(['disabled'])\n//     } else {\n//       redoButton.removeClass(['disabled'])\n//     }\n//     e.target.nextSibling.value = html\n//   }, false)\n//   /**\n//    * Listen for input events, set timeout to update state, clear timeout from previous input\n//    */\n//   markyEditor.listen('input', function (e) {\n//     window.clearTimeout(timeoutID)\n//     timeoutID = window.setTimeout(() => {\n//       e.target.dispatchEvent(markyupdate)\n//     }, 1000)\n//   }, false)\n//   /**\n//    * Listen for change events (requires loss of focus) and update state\n//    */\n//   markyEditor.listen('change', function (e) {\n//     e.target.dispatchEvent(markyupdate)\n//   }, false)\n//   /**\n//    * Listen for pasting into the editor and update state\n//    */\n//   markyEditor.listen('paste', function (e) {\n//     setTimeout(() => {\n//       e.target.dispatchEvent(markyupdate)\n//     }, 0)\n//   }, false)\n//   /**\n//    * Listen for cutting from the editor and update state\n//    */\n//   markyEditor.listen('cut', function (e) {\n//     setTimeout(() => {\n//       e.target.dispatchEvent(markyupdate)\n//     }, 0)\n//   }, false)\n//   let deleteSelection = 0\n//   /**\n//    * Listen for keydown events, if key is delete key, set deleteSelection to length of selection\n//    */\n//   markyEditor.listen('keydown', function (e) {\n//     if (e.which === 8) deleteSelection = e.target.selectionEnd - e.target.selectionStart\n//   })\n//   let keyMap = [] // Used for determining whether or not to update state on space keyup\n//   let punctuations = [\n//     46, // period\n//     44, // comma\n//     63, // question mark\n//     33, // exclamation point\n//     58, // colon\n//     59, // semi-colon\n//     47, // back slash\n//     92, // forward slash\n//     38, // ampersand\n//     124, // vertical pipe\n//     32 // space\n//   ]\n//   /**\n//    * Listen for keyup events, if key is space or punctuation\n//    * (but not a space following punctuation or another space), update state and clear input timeout.\n//    */\n//   markyEditor.listen('keypress', function (e) {\n//     keyMap.push(e.which)\n//     if (keyMap.length > 2) keyMap.shift()\n//     punctuations.forEach((punctuation) => {\n//       if (e.which === 32 && keyMap[0] === punctuation) {\n//         return window.clearTimeout(timeoutID)\n//       }\n//       if (e.which === punctuation) {\n//         window.clearTimeout(timeoutID)\n//         return e.target.dispatchEvent(markyupdate)\n//       }\n//     })\n//   })\n//   /**\n//    * Listen for keyup events, if key is delete and it's a bulk selection, update state and clear input timeout.\n//    */\n//   markyEditor.listen('keyup', function (e) {\n//     if (e.which === 8 && deleteSelection > 0) {\n//       window.clearTimeout(timeoutID)\n//       deleteSelection = 0\n//       e.target.dispatchEvent(markyupdate)\n//     }\n//   })\n//   markyEditor.listen('select', function (e) {\n//     e.target.dispatchEvent(markyselect)\n//   })\n//   markyEditor.listen('blur', function (e) {\n//     e.target.dispatchEvent(markyblur)\n//   })\n//   markyEditor.listen('focus', function (e) {\n//     e.target.dispatchEvent(markyfocus)\n//   })\n//   markyEditor.listen('click', function () {\n//     imageDialog.element.style.visibility = 'hidden'\n//     imageDialog.removeClass(['toggled'])\n//     linkDialog.element.style.visibility = 'hidden'\n//     linkDialog.removeClass(['toggled'])\n//     headingDialog.element.style.visibility = 'hidden'\n//     headingDialog.removeClass(['toggled'])\n//   })\n});};var _Marky=require('./Marky');var _Element=require('./Element');var _Button=require('./Button');\n\n},{\"./Button\":4,\"./Element\":5,\"./Marky\":6}],11:[function(require,module,exports){\n'use strict'; /**\n * Handles adding and removing state\n * @param   {Array}    state      the state timeline\n * @param   {Number}   stateIndex the current state index\n * @param   {Function} fn         a function to call\n * @returns {Object}   the new timeline\n */Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=function(state,stateIndex,fn){state=state.slice(0,stateIndex+1);var newVersion=fn();state.push(newVersion);stateIndex++;if(stateIndex>999){state.shift();stateIndex--;}return {state:state,index:stateIndex};};\n\n},{}],12:[function(require,module,exports){\n'use strict'; /**\n * Finds the first index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional starting index\n * @returns {Number} the index of the match\n */Object.defineProperty(exports,\"__esModule\",{value:true});exports.indexOfMatch=indexOfMatch;exports.indicesOfMatches=indicesOfMatches;exports.lastIndexOfMatch=lastIndexOfMatch;exports.splitLinesBackward=splitLinesBackward;exports.splitLines=splitLines;exports.startOfLine=startOfLine;exports.endOfLine=endOfLine;function indexOfMatch(string,regex,index){var str=index!==null?string.substring(index):string;var matches=str.match(regex);return matches?str.indexOf(matches[0])+index:-1;} /**\n * Finds the first index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional starting index\n * @returns {Number} the index of the match\n */function indicesOfMatches(string,regex,index){var str=index!==null?string.substring(index):string;var matches=str.match(regex);var indices=[];matches.forEach(function(match,i){var prevIndex=indices?indices[i-1]:null;indices.push(str.indexOf(match,prevIndex+1)+index);});return indices||-1;} /**\n * Finds the last index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional ending index\n * @returns {Number} the index of the match\n */function lastIndexOfMatch(string,regex,index){var str=index!==null?string.substring(0,index):string;var matches=str.match(regex);return matches?str.lastIndexOf(matches[matches.length-1]):-1;} /**\n * Creates an array of lines separated by line breaks\n * @param   {Number} index optional ending index\n * @returns {Array}  an array of strings\n */function splitLinesBackward(string,index){var str=index?string.substring(0,index):string;return str.split(/\\r\\n|\\r|\\n/);} /**\n * Creates an array of lines split by line breaks\n * @param   {Number} index optional starting index\n * @returns {Array}  an array of strings\n */function splitLines(string,index){var str=index?string.substring(index):string;return str.split(/\\r\\n|\\r|\\n/);} /**\n * Finds the start of a line\n * @param   {Number} index  optional position\n * @returns {Number} the index of the line start\n */function startOfLine(string){var index=arguments.length<=1||arguments[1]===undefined?0:arguments[1];return lastIndexOfMatch(string,/^.*/gm,index);} /**\n * Finds the end of a line\n * @param   {Number} index  optional position\n * @returns {Number} the index of the line end\n */function endOfLine(string){var index=arguments.length<=1||arguments[1]===undefined?0:arguments[1];return indexOfMatch(string,/(\\r|\\n|$)/gm,index);}\n\n},{}]},{},[1])(1)\n});\n\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked\n */\n\n;(function() {\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^( *[-*_]){3,} *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *#* *(?:\\n+|$)/,\n  nptable: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  blockquote: /^( *>[^\\n]+(\\n(?!def)[^\\n]+)*\\n*)+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: /^ *(?:comment *(?:\\n|\\s*$)|closed *(?:\\n{2,}|\\s*$)|closing *(?:\\n{2,}|\\s*$))/,\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +[\"(]([^\\n]+)[\")])? *(?:\\n+|$)/,\n  table: noop,\n  paragraph: /^((?:[^\\n]+\\n?(?!hr|heading|lheading|blockquote|tag|def))+)\\n*/,\n  text: /^[^\\n]+/\n};\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = replace(block.item, 'gm')\n  (/bull/g, block.bullet)\n  ();\n\nblock.list = replace(block.list)\n  (/bull/g, block.bullet)\n  ('hr', '\\\\n+(?=\\\\1?(?:[-*_] *){3,}(?:\\\\n+|$))')\n  ('def', '\\\\n+(?=' + block.def.source + ')')\n  ();\n\nblock.blockquote = replace(block.blockquote)\n  ('def', block.def)\n  ();\n\nblock._tag = '(?!(?:'\n  + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code'\n  + '|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo'\n  + '|span|br|wbr|ins|del|img)\\\\b)\\\\w+(?!:/|[^\\\\w\\\\s@]*@)\\\\b';\n\nblock.html = replace(block.html)\n  ('comment', /<!--[\\s\\S]*?-->/)\n  ('closed', /<(tag)[\\s\\S]+?<\\/\\1>/)\n  ('closing', /<tag(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/)\n  (/tag/g, block._tag)\n  ();\n\nblock.paragraph = replace(block.paragraph)\n  ('hr', block.hr)\n  ('heading', block.heading)\n  ('lheading', block.lheading)\n  ('blockquote', block.blockquote)\n  ('tag', '<' + block._tag)\n  ('def', block.def)\n  ();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\s*\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = replace(block.paragraph)\n  ('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  ();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *(\\S.*\\|.*)\\n *([-:]+ *\\|[-| :]*)\\n((?:.*\\|.*(?:\\n|$))*)\\n*/,\n  table: /^ *\\|(.+)\\n *\\|( *[-:]+[-| :]*)\\n((?: *\\|.*(?:\\n|$))*)\\n*/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top, bq) {\n  var src = src.replace(/^ +$/gm, '')\n    , next\n    , loose\n    , cap\n    , bull\n    , b\n    , item\n    , space\n    , i\n    , l;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i].split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top, true);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: bull.length > 1\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start'\n        });\n\n        // Recurse.\n        this.token(item, false, bq);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if ((!bq && top) && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.links[cap[1].toLowerCase()] = {\n        href: cap[2],\n        title: cap[3]\n      };\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      src = src.substring(cap[0].length);\n\n      item = {\n        type: 'table',\n        header: cap[1].replace(/^ *| *\\| *$/g, '').split(/ *\\| */),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n')\n      };\n\n      for (i = 0; i < item.align.length; i++) {\n        if (/^ *-+: *$/.test(item.align[i])) {\n          item.align[i] = 'right';\n        } else if (/^ *:-+: *$/.test(item.align[i])) {\n          item.align[i] = 'center';\n        } else if (/^ *:-+ *$/.test(item.align[i])) {\n          item.align[i] = 'left';\n        } else {\n          item.align[i] = null;\n        }\n      }\n\n      for (i = 0; i < item.cells.length; i++) {\n        item.cells[i] = item.cells[i]\n          .replace(/^ *\\| *| *\\| *$/g, '')\n          .split(/ *\\| */);\n      }\n\n      this.tokens.push(item);\n\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([\\\\`*{}\\[\\]()#+\\-.!_>])/,\n  autolink: /^<([^ >]+(@|:\\/)[^ >]+)>/,\n  url: noop,\n  tag: /^<!--[\\s\\S]*?-->|^<\\/?\\w+(?:\"[^\"]*\"|'[^']*'|[^'\">])*?>/,\n  link: /^!?\\[(inside)\\]\\(href\\)/,\n  reflink: /^!?\\[(inside)\\]\\s*\\[([^\\]]*)\\]/,\n  nolink: /^!?\\[((?:\\[[^\\]]*\\]|[^\\[\\]])*)\\]/,\n  strong: /^__([\\s\\S]+?)__(?!_)|^\\*\\*([\\s\\S]+?)\\*\\*(?!\\*)/,\n  em: /^\\b_((?:[^_]|__)+?)_\\b|^\\*((?:\\*\\*|[\\s\\S])+?)\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[_*`]| {2,}\\n|$)/\n};\n\ninline._inside = /(?:\\[[^\\]]*\\]|[^\\[\\]]|\\](?=[^\\[]*\\]))*/;\ninline._href = /\\s*<?([\\s\\S]*?)>?(?:\\s+['\"]([\\s\\S]*?)['\"])?\\s*/;\n\ninline.link = replace(inline.link)\n  ('inside', inline._inside)\n  ('href', inline._href)\n  ();\n\ninline.reflink = replace(inline.reflink)\n  ('inside', inline._inside)\n  ();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: replace(inline.escape)('])', '~|])')(),\n  url: /^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: replace(inline.text)\n    (']|', '~]|')\n    ('|', '|https?://|')\n    ()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: replace(inline.br)('{2,}', '*')(),\n  text: replace(inline.gfm.text)('{2,}', '*')()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer;\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new\n      Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  } else if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = ''\n    , link\n    , text\n    , href\n    , cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = cap[1].charAt(6) === ':'\n          ? this.mangle(cap[1].substring(7))\n          : this.mangle(cap[1]);\n        href = this.mangle('mailto:') + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      src = src.substring(cap[0].length);\n      text = escape(cap[1]);\n      href = text;\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      out += this.outputLink(cap, {\n        href: cap[2],\n        title: cap[3]\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2], true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new\n        Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = escape(link.href)\n    , title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = ''\n    , l = text.length\n    , i = 0\n    , ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || {};\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '\\n</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '\\n</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  return '<h'\n    + level\n    + ' id=\"'\n    + this.options.headerPrefix\n    + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n    + '\">'\n    + text\n    + '</h'\n    + level\n    + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered) {\n  var type = ordered ? 'ol' : 'ul';\n  return '<' + type + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + '<tbody>\\n'\n    + body\n    + '</tbody>\\n'\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' style=\"text-align:' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return '';\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0) {\n      return '';\n    }\n  }\n  var out = '<a href=\"' + href + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer;\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options, renderer) {\n  var parser = new Parser(options, renderer);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options, this.renderer);\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        this.token.text);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = ''\n        , body = ''\n        , i\n        , row\n        , cell\n        , flags\n        , j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        flags = { header: true, align: this.token.align[i] };\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      var body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      var body = ''\n        , ordered = this.token.ordered;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered);\n    }\n    case 'list_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      var body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      var html = !this.token.pre && !this.options.pedantic\n        ? this.inline.output(this.token.text)\n        : this.token.text;\n      return this.renderer.html(html);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  return html.replace(/&([#\\w]+);/g, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction replace(regex, opt) {\n  regex = regex.source;\n  opt = opt || '';\n  return function self(name, val) {\n    if (!name) return new RegExp(regex, opt);\n    val = val.source || val;\n    val = val.replace(/(^|[^\\[])\\^/g, '$1');\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1\n    , target\n    , key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight\n      , tokens\n      , pending\n      , i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/chjj/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occured:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.defaults = {\n  gfm: true,\n  tables: true,\n  breaks: false,\n  pedantic: false,\n  sanitize: false,\n  sanitizer: null,\n  mangle: true,\n  smartLists: false,\n  silent: false,\n  highlight: null,\n  langPrefix: 'lang-',\n  smartypants: false,\n  headerPrefix: '',\n  renderer: new Renderer,\n  xhtml: false\n};\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  this.marked = marked;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n","'use strict'\n\nimport {Marky} from './modules/Marky'\nlet marky = new Marky()\nexport default marky\n","'use strict'\n\nimport {Element} from './Element'\n\n/**\n * Creates HTML button elements\n * @class\n * @requires Element\n * @param {String}      type    tag name for the element\n * @param {String}      title   title for the element\n * @param {String}      id      editor ID to associate with the element\n * @param {HTMLElement} relevant  element this element should have access to\n */\nlet Icon = Object.create(Element)\nIcon.init = function (type, classNames) {\n  Element.init.call(this, 'i')\n  this.addClass(classNames)\n}\n\nexport var Button = Object.create(Element)\nButton.init = function (title, id, ...iconClasses) {\n  Element.init.call(this, 'button', title, id)\n  this.addClass([this.title, this.id])\n  this.assign('value', this.title)\n  this.icon = Object.create(Icon)\n  this.icon.init('i', iconClasses)\n  this.icon.appendTo(this.element)\n}","'use strict'\n\n/**\n * Creates an HTML element with some built-in shortcut methods\n * @class\n * @param {String}      type    tag name for the element\n * @param {String}      title   title for the element\n * @param {String}      id      editor ID to associate with the element\n * @param {HTMLElement} relevant  element this element should have access to\n */\n// export class Element {\n//   constructor (type, title = null, id = null, relevant = null) {\n//     this.title = title\n//     this.type = type\n//     this.id = id\n//     this.relevant = relevant\n//     this.element = this.register()\n//\n//   }\n\n//   register () {\n//     return document.createElement(this.type)\n//   }\n\n//   assign (prop, value) {\n//     this.element[prop] = value\n//   }\n\n//   appendTo (container) {\n//     container.appendChild(this.element)\n//   }\n\n//   addClass (classNames) {\n//     classNames.forEach((className) => {\n//       this.element.classList.add(className.replace(/[ ]/g, '-').toLowerCase())\n//     })\n//   }\n\n//   removeClass (classNames) {\n//     classNames.forEach((className) => {\n//       this.element.classList.remove(className.replace(/[ ]/g, '-').toLowerCase())\n//     })\n//   }\n\n//   listen (evt, cb) {\n//     this.element.addEventListener(evt, cb)\n//   }\n// }\n\nexport var Element = {\n  init (type, title = null, id = null) {\n    this.type = type\n    this.title = title\n    this.id = id\n    this.element = this.register()\n    if (this.title) this.element.title = this.title\n  },\n  register () {\n    return document.createElement(this.type)\n  },\n  assign (prop, value) {\n    this.element[prop] = value\n  },\n  appendTo (container) {\n    container.appendChild(this.element)\n  },\n  addClass (classNames) {\n    classNames.forEach((className) => {\n      this.element.classList.add(className.replace(/[ ]/g, '-').toLowerCase())\n    })\n  },\n  removeClass (classNames) {\n    classNames.forEach((className) => {\n      this.element.classList.remove(className.replace(/[ ]/g, '-').toLowerCase())\n    })\n  },\n  listen (evt, cb) {\n    this.element.addEventListener(evt, cb)\n  }\n}\n","'use strict'\n\n/**\n * Marky Mark\n * Author: Patrick Fricano\n * https://www.github.com/patrickfatrick/marky-marked\n */\n\nimport mark from './mark'\nimport * as dispatcher from './dispatcher'\nimport {markyupdate, markychange} from './custom-events'\nimport {inlineHandler, blockHandler, insertHandler, listHandler, indentHandler} from './handlers'\n\nexport class Marky {\n  constructor (editor, container) {\n    this.mark = mark\n    this.state = [{markdown: '', html: '', selection: [0, 0]}]\n    this.index = 0\n    this.editor = editor\n    this.container = container\n  }\n\n  /**\n   * Removes the container and all descendants from the DOM\n   * @param  {container} container the container used to invoke `mark()`\n   */\n  destroy (container = this.container) {\n    container.remove()\n  }\n  /**\n   * Handles updating the state on forward-progress changes\n   * @requires dispatcher/update\n   * @param {String} markdown the new markdown blob\n   * @param {Array}  state    the state timeline\n   * @param {Number} index    current state index\n   */\n  update (markdown, selection = [0, 0], state = this.state, index = this.index) {\n    const action = dispatcher.update(markdown, selection, state, index)\n    this.state = action.state\n    this.index = action.index\n  }\n\n  /**\n   * Handles moving backward in state\n   * @requires dispatcher/undo\n   * @param   {Number}      num    number of states to move back\n   * @param   {Array}       state  the state timeline\n   * @param   {Number}      index  current state index\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Number}      the new index\n   */\n  undo (num = 1, state = this.state, index = this.index, editor = this.editor) {\n    if (index === 0) return index\n\n    const action = dispatcher.undo(num, state, index)\n    this.index = action.index\n    editor.value = action.state.markdown\n    editor.setSelectionRange(action.state.selection[0], action.state.selection[1])\n    editor.nextSibling.value = action.state.html\n    editor.dispatchEvent(markychange)\n    return this.index\n  }\n\n  /**\n   * Handles moving forward in state\n   * @requires dispatcher/redo\n   * @param   {Number}      num    number of states to move back\n   * @param   {Array}       state  the state timeline\n   * @param   {Number}      index  current state index\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Number}      the new index\n   */\n  redo (num = 1, state = this.state, index = this.index, editor = this.editor) {\n    if (index === state.length - 1) return index\n\n    const action = dispatcher.redo(num, state, index)\n    this.index = action.index\n    editor.value = action.state.markdown\n    editor.setSelectionRange(action.state.selection[0], action.state.selection[1])\n    editor.nextSibling.value = action.state.html\n    editor.dispatchEvent(markychange)\n    return this.index\n  }\n\n  /**\n   * Setsa the selection indices in the editor\n   * @param   {Array}       arr    starting and ending indices\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the array that was passed in\n   */\n  setSelection (arr = [0, 0], editor = this.editor) {\n    editor.setSelectionRange(arr[0], arr[1])\n    return arr\n  }\n\n  /**\n   * expands the selection to the right\n   * @param   {Number}      num    number of characters to expand by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new selection indices\n   */\n  expandSelectionForward (num = 0, editor = this.editor) {\n    const start = editor.selectionStart\n    const end = editor.selectionEnd + num\n\n    editor.setSelectionRange(start, end)\n    return [start, end]\n  }\n\n  /**\n   * expands the selection to the left\n   * @param   {Number}      num    number of characters to expand by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new selection indices\n   */\n  expandSelectionBackward (num = 0, editor = this.editor) {\n    const start = editor.selectionStart - num\n    const end = editor.selectionEnd\n\n    editor.setSelectionRange(start, end)\n    return [start, end]\n  }\n\n  /**\n   * expands the cursor to the right\n   * @param   {Number}      num    number of characters to move by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new cursor position\n   */\n  moveCursorBackward (num = 0, editor = this.editor) {\n    const start = editor.selectionStart - num\n\n    editor.setSelectionRange(start, start)\n    return start\n  }\n\n  /**\n   * expands the cursor to the left\n   * @param   {Number}      num    number of characters to move by\n   * @param   {HTMLElement} editor the marky marked editor\n   * @returns {Array}       the new cursor position\n   */\n  moveCursorForward (num = 0, editor = this.editor) {\n    const start = editor.selectionStart + num\n\n    editor.setSelectionRange(start, start)\n    return start\n  }\n\n  /**\n   * implements a bold on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the bold\n   */\n  bold (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let boldify = inlineHandler(editor.value, indices, '**')\n    editor.value = boldify.value\n    editor.setSelectionRange(boldify.range[0], boldify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [boldify.range[0], boldify.range[1]]\n  }\n\n  /**\n   * implements an italic on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the italic\n   */\n  italic (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let italicize = inlineHandler(editor.value, indices, '_')\n    editor.value = italicize.value\n    editor.setSelectionRange(italicize.range[0], italicize.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [italicize.range[0], italicize.range[1]]\n  }\n\n  /**\n   * implements a strikethrough on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the strikethrough\n   */\n  strikethrough (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let strikitize = inlineHandler(editor.value, indices, '~~')\n    editor.value = strikitize.value\n    editor.setSelectionRange(strikitize.range[0], strikitize.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [strikitize.range[0], strikitize.range[1]]\n  }\n\n  /**\n   * implements a code on a selection\n   * @requires handlers/inlineHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the code\n   */\n  code (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let codify = inlineHandler(editor.value, indices, '`')\n    editor.value = codify.value\n    editor.setSelectionRange(codify.range[0], codify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [codify.range[0], codify.range[1]]\n  }\n\n  /**\n   * implements a blockquote on a selection\n   * @requires handlers/blockHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the bold\n   */\n  blockquote (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let quotify = blockHandler(editor.value, indices, '> ')\n    editor.value = quotify.value\n    editor.setSelectionRange(quotify.range[0], quotify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [quotify.range[0], quotify.range[1]]\n  }\n\n  /**\n   * implements a heading on a selection\n   * @requires handlers/blockHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the heading\n   */\n  heading (value = 0, indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let markArr = []\n    let mark\n    for (let i = 1; i <= value; i++) {\n      markArr.push('#')\n    }\n    mark = markArr.join('')\n    let space = mark ? ' ' : ''\n    let headingify = blockHandler(editor.value, indices, mark + space)\n    editor.value = headingify.value\n    editor.setSelectionRange(headingify.range[0], headingify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [headingify.range[0], headingify.range[1]]\n  }\n\n  /**\n   * inserts a link snippet at the end of a selection\n   * @requires handlers/insertHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the snippet is inserted\n   */\n  link (indices, url = 'http://url.com', display = 'http://url.com', editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    const mark = '[' + display + '](' + url + ')'\n    let linkify = insertHandler(editor.value, indices, mark)\n    editor.value = linkify.value\n    editor.setSelectionRange(linkify.range[0], linkify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [linkify.range[0], linkify.range[1]]\n  }\n\n  /**\n   * inserts an image snippet at the end of a selection\n   * @requires handlers/insertHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the snippet is inserted\n   */\n  image (indices, source = 'http://imagesource.com/image.jpg', alt = 'http://imagesource.com/image.jpg', editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    const mark = '![' + alt + '](' + source + ')'\n    let imageify = insertHandler(editor.value, indices, mark)\n    editor.value = imageify.value\n    editor.setSelectionRange(imageify.range[0], imageify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [imageify.range[0], imageify.range[1]]\n  }\n\n  /**\n   * implements an unordered list on a selection\n   * @requires handlers/listHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the list is implemented\n   */\n  unorderedList (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let listify = listHandler(editor.value, indices, 'ul')\n    editor.value = listify.value\n    editor.setSelectionRange(listify.range[0], listify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [listify.range[0], listify.range[1]]\n  }\n\n  /**\n   * implements an ordered list on a selection\n   * @requires handlers/listHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the list is implemented\n   */\n  orderedList (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let listify = listHandler(editor.value, indices, 'ol')\n    editor.value = listify.value\n    editor.setSelectionRange(listify.range[0], listify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [listify.range[0], listify.range[1]]\n  }\n\n  /**\n   * implements an indent on a selection\n   * @requires handlers/indentHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the indent is implemented\n   */\n  indent (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let indentify = indentHandler(editor.value, indices, 'in')\n    editor.value = indentify.value\n    editor.setSelectionRange(indentify.range[0], indentify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [indentify.range[0], indentify.range[1]]\n  }\n\n  /**\n   * implements an outdent on a selection\n   * @requires handlers/indentHandler\n   * @param   {Array}       indices starting and ending positions for the selection\n   * @param   {HTMLElement} editor  the marky marked editor\n   * @returns {Array}       the new selection after the outdent is implemented\n   */\n  outdent (indices, editor = this.editor) {\n    indices = indices || [editor.selectionStart, editor.selectionEnd]\n    let indentify = indentHandler(editor.value, indices, 'out')\n    editor.value = indentify.value\n    editor.setSelectionRange(indentify.range[0], indentify.range[1])\n    let html = editor._marky.state[editor._marky.index].html\n    editor.nextSibling.value = html\n    editor.dispatchEvent(markyupdate)\n    return [indentify.range[0], indentify.range[1]]\n  }\n}\n","/* global CustomEvent */\n'use strict'\n\n// Custom Event Polyfill for IE9+\n;(function () {\n  function CustomEvent (event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n\nexport var markyblur = new CustomEvent('markyblur')\nexport var markyfocus = new CustomEvent('markyfocus')\nexport var markyselect = new CustomEvent('markyselect')\nexport var markyupdate = new CustomEvent('markyupdate')\nexport var markychange = new CustomEvent('markychange')\n","'use strict'\n\nimport marked from 'marked'\nimport operation from './operation'\n\n/**\n * updates the state\n * @external marked\n * @requires operation\n * @param   {String} markdown   markdown blob\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */\nexport function update (markdown, selection, state, stateIndex) {\n  let markedOptions = {\n    sanitize: true\n  }\n  let html = marked(markdown, markedOptions).toString() || ''\n  let newState = operation(state, stateIndex, () => {\n    return {markdown: markdown, html: html, selection: selection}\n  })\n  return newState\n}\n\n/**\n * moves backward in state\n * @param   {Number} num        the number of states to move back by\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */\nexport function undo (num, state, stateIndex) {\n  stateIndex = (stateIndex > (num - 1)) ? stateIndex - num : 0\n  return {state: state[stateIndex], index: stateIndex}\n}\n\n/**\n * moves forwardin state\n * @param   {Number} num        the number of states to move back by\n * @param   {Array}  state      the state timeline\n * @param   {Number} stateIndex the current state index\n * @returns {Object} the newly active state\n */\nexport function redo (num, state, stateIndex) {\n  stateIndex = (stateIndex < state.length - (num + 1)) ? stateIndex + num : state.length - 1\n  return {state: state[stateIndex], index: stateIndex}\n}\n","'use strict'\n\nimport {indexOfMatch, splitLines, startOfLine, endOfLine} from './parsers'\n/**\n * Handles wrapping format strings around a selection\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the format string to use\n * @returns {Object} the new string, the updated indices\n */\nexport function inlineHandler (string, indices, mark) {\n  let value\n  let useMark = [mark, mark]\n  if (string.indexOf(mark) !== -1) {\n    indices.forEach(function (n, i) {\n      if (string.lastIndexOf(mark, n) === n - mark.length) {\n        string = string.substring(0, n - mark.length) + string.substring(n, string.length)\n        if (i === 0) {\n          indices[0] = indices[0] - mark.length\n          indices[1] = indices[1] - mark.length\n        } else {\n          indices[1] = indices[1] - mark.length\n        }\n        if (i === 1 && useMark[0]) indices[1] = indices[1] + mark.length\n        useMark[i] = ''\n      }\n      if (string.indexOf(mark, n) === n) {\n        string = string.substring(0, n) + string.substring(n + mark.length, string.length)\n        if (i === 0 && (indices[0] !== indices[1])) {\n          indices[1] = indices[1] - mark.length\n        }\n        if (i === 0 && (indices[0] === indices[1])) {\n          indices[0] = indices[0] - mark.length\n        }\n        if (i === 1 && useMark[0]) indices[1] = indices[1] + mark.length\n        useMark[i] = ''\n      }\n    })\n  }\n  value = string.substring(0, indices[0]) + useMark[0] + string.substring(indices[0], indices[1]) + useMark[1] + string.substring(indices[1], string.length)\n  return {value: value, range: [indices[0] + useMark[0].length, indices[1] + useMark[1].length]}\n}\n\n/**\n * Handles adding/removing a format string to a line\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the format string to use\n * @returns {Object} the new string, the updated indices\n */\nexport function blockHandler (string, indices, mark) {\n  const start = indices[0]\n  const end = indices[1]\n  let value\n  let lineStart = startOfLine(string, start)\n  let lineEnd = endOfLine(string, end)\n  if (indexOfMatch(string, /^[#>]/m, lineStart) === lineStart) {\n    let currentFormat = string.substring(lineStart, lineStart + string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm))\n    value = string.substring(0, lineStart) + string.substring(lineStart + string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm), string.length)\n    lineEnd = lineEnd - currentFormat.length\n    if (currentFormat.trim() !== mark.trim() && mark.trim().length) {\n      value = string.substring(0, lineStart) + mark + string.substring(lineStart + string.substring(lineStart).search(/[0-9~*`_-]|\\b|\\n|$/gm), string.length)\n      lineStart = lineStart + mark.length\n      lineEnd = lineEnd + mark.length\n    }\n    return {value: value, range: [lineStart, lineEnd]}\n  }\n  value = string.substring(0, lineStart) + mark + string.substring(lineStart, string.length)\n  return {value: value, range: [start + mark.length, end + mark.length]}\n}\n\n/**\n * Handles adding/removing format strings to groups of lines\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} type    ul or ol\n * @returns {Object} the new string, the updated indices\n */\nexport function listHandler (string, indices, type) {\n  const start = startOfLine(string, indices[0])\n  const end = endOfLine(string, indices[1])\n  const lines = splitLines(string.substring(start, end))\n  let newLines = []\n  let value\n  lines.forEach((line, i) => {\n    let mark = (type === 'ul') ? '-' + ' ' : (i + 1) + '.' + ' '\n    let newLine\n    if (indexOfMatch(line, /^[0-9#>-]/m, 0) === 0) {\n      let currentFormat = line.substring(0, 0 + line.substring(0).search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm))\n      newLine = line.substring(line.search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm), line.length)\n      if (currentFormat.trim() !== mark.trim()) {\n        newLine = mark + line.substring(line.search(/[~*`_[!]|[a-zA-Z]|\\r|\\n|$/gm), line.length)\n      }\n      return newLines.push(newLine)\n    }\n    newLine = mark + line.substring(0, line.length)\n    return newLines.push(newLine)\n  })\n  let joined = newLines.join('\\r\\n')\n  value = string.substring(0, start) + newLines.join('\\r\\n') + string.substring(end, string.length)\n  return {value: value, range: [start, start + joined.replace(/\\n/gm, '').length]}\n}\n\n/**\n * Handles adding/removing indentation to groups of lines\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} type    in or out\n * @returns {Object} the new string, the updated indices\n */\nexport function indentHandler (string, indices, type) {\n  const start = startOfLine(string, indices[0])\n  const end = endOfLine(string, indices[1])\n  const lines = splitLines(string.substring(start, end))\n  let newLines = []\n  let value\n  lines.forEach((line) => {\n    let mark = '    '\n    let newLine\n    if (type === 'out') {\n      newLine = (line.indexOf(mark, 0) === 0) ? line.substring(mark.length, line.length) : line.substring(line.search(/[~*`_[!#>-]|[a-zA-Z0-9]|\\r|\\n|$/gm), line.length)\n      return newLines.push(newLine)\n    }\n    newLine = mark + line.substring(0, line.length)\n    return newLines.push(newLine)\n  })\n  let joined = newLines.join('\\r\\n')\n  value = string.substring(0, start) + newLines.join('\\r\\n') + string.substring(end, string.length)\n  return {value: value, range: [start, start + joined.replace(/\\n/gm, '').length]}\n}\n\n/**\n * Handles inserting a snippet at the end of a selection\n * @param   {String} string  the entire string to use\n * @param   {Array}  indices the starting and ending positions to wrap\n * @param   {String} mark    the snippet to insert\n * @returns {Object} the new string, the updated indices\n */\nexport function insertHandler (string, indices, mark) {\n  const start = indices[0]\n  const end = indices[1]\n  let value\n  value = string.substring(0, start) + mark + string.substring(end, string.length)\n\n  return {value: value, range: [start, start + mark.length]}\n}\n","'use strict'\n\nimport {Marky} from './Marky'\nimport {Element} from './Element'\nimport {Button} from './Button'\n// import {HeadingButton, BoldButton, ItalicButton, StrikethroughButton, CodeButton, BlockquoteButton, LinkButton, ImageButton, UnorderedListButton, OrderedListButton, IndentButton, OutdentButton, UndoButton, RedoButton, FullscreenButton} from './Buttons'\n// import {LinkDialog, ImageDialog, HeadingDialog} from './Dialogs'\n// import {markyblur, markyfocus, markyselect, markyupdate, markychange} from './custom-events'\n\n// let timeoutID // Used later for input events\n\n/**\n * Register and append the DOM elements needed and set the event listeners\n * @param   {String}  tag name to be used for initialization\n */\nexport default function (tag = 'marky-mark') {\n  let containers = document.getElementsByTagName(tag)\n  let idArr = []\n  return Array.prototype.forEach.call(containers, (container, i) => {\n    let idIndex = i\n    if (container.children.length) {\n      if (container.getAttribute('id')) idArr.push(parseInt(container.getAttribute('id').split('-')[2]))\n      return\n    }\n    // let toolbar = new Element('div', 'Toolbar')\n    let toolbar = Object.create(Element)\n    toolbar.type = 'div'\n    toolbar.element = toolbar.register()\n    toolbar.element.title = 'Toolbar'\n\n    if (idArr.length) {\n      idArr.sort()\n      idIndex = idArr[idArr.length - 1] + 1\n    }\n\n    let id = 'marky-mark-' + idIndex\n    container.id = id\n    toolbar.addClass(['marky-toolbar', id])\n\n    // let dialogs = new Element('div', 'Dialogs')\n    let dialogs = Object.create(Element)\n    dialogs.type = 'div'\n    dialogs.element = dialogs.register()\n    dialogs.element.title = 'Dialogs'\n    dialogs.addClass(['marky-dialogs', id])\n\n    // let markyEditor = new Element('textarea', 'Marky Marked Editor')\n    let markyEditor = Object.create(Element)\n    markyEditor.type = 'textarea'\n    markyEditor.element = markyEditor.register()\n    markyEditor.element.title = 'Marky Marked Editor'\n    markyEditor.addClass(['marky-editor', id])\n    markyEditor.assign('_marky', new Marky(markyEditor.element, container))\n\n    // let markyOutput = new Element('input', 'Marky Marked Output')\n    let markyOutput = Object.create(Element)\n    markyOutput.type = 'input'\n    markyOutput.element = markyOutput.register()\n    markyOutput.element.title = 'Marky Marked Output'\n    markyOutput.assign('type', 'hidden')\n    markyOutput.addClass(['marky-output', id])\n\n    // let headingDialog = new HeadingDialog('div', 'Heading Dialog', id, markyEditor)\n    // headingDialog.element.style.visibility = 'hidden'\n\n    // let linkDialog = new LinkDialog('div', 'Link Dialog', id, markyEditor)\n    // linkDialog.element.style.visibility = 'hidden'\n\n    // let imageDialog = new ImageDialog('div', 'Image Dialog', id, markyEditor)\n    // imageDialog.element.style.visibility = 'hidden'\n\n    // let headingButton = new HeadingButton('button', 'Heading', id, headingDialog)\n    let headingButton = Object.create(Button)\n    headingButton.init('Headings', id, 'fa', 'fa-header')\n    headingButton.listen('click', (e) => {\n      e.preventDefault()\n      this.element.blur()\n      headingButton.dialog.classList.toggle('toggled')\n      if (headingButton.dialog.style.visibility === 'hidden') {\n        headingButton.dialog.style.visibility = 'visible'\n        return\n      }\n      headingButton.dialog.style.visibility = 'hidden'\n    })\n    // headingButton.listen('click', function () {\n    //   imageDialog.element.style.visibility = 'hidden'\n    //   imageDialog.removeClass(['toggled'])\n    //   linkDialog.element.style.visibility = 'hidden'\n    //   linkDialog.removeClass(['toggled'])\n    // })\n    // let boldButton = new BoldButton('button', 'Bold', id, markyEditor)\n    // let italicButton = new ItalicButton('button', 'Italic', id, markyEditor)\n    // let strikethroughButton = new StrikethroughButton('button', 'Strikethrough', id, markyEditor)\n    // let codeButton = new CodeButton('button', 'Code', id, markyEditor)\n    // let blockquoteButton = new BlockquoteButton('button', 'Blockquote', id, markyEditor)\n    let boldButton = Object.create(Button)\n    boldButton.init('Bold', id, 'fa', 'fa-bold')\n    boldButton.editor = markyEditor.element\n    boldButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      boldButton.editor.focus()\n      return boldButton.addClass(['active'])\n    })\n    boldButton.listen('mouseup', () => {\n      return boldButton.removeClass(['active'])\n    })\n    boldButton.listen('click', (e) => {\n      e.preventDefault()\n      boldButton.editor.focus()\n      return boldButton.editor._marky.bold([boldButton.editor.selectionStart, boldButton.editor.selectionEnd])\n    })\n\n    let italicButton = Object.create(Button)\n    italicButton.init('Italic', id, 'fa', 'fa-italic')\n    italicButton.editor = markyEditor.element\n    italicButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      italicButton.editor.focus()\n      return italicButton.addClass(['active'])\n    })\n    italicButton.listen('mouseup', () => {\n      return italicButton.removeClass(['active'])\n    })\n    italicButton.listen('click', (e) => {\n      e.preventDefault()\n      italicButton.editor.focus()\n      return italicButton.editor._marky.italic([italicButton.editor.selectionStart, italicButton.editor.selectionEnd])\n    })\n\n    let strikethroughButton = Object.create(Button)\n    strikethroughButton.init('Italic', id, 'fa', 'fa-strikethrough')\n    strikethroughButton.editor = markyEditor.element\n    strikethroughButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      strikethroughButton.editor.focus()\n      return strikethroughButton.addClass(['active'])\n    })\n    strikethroughButton.listen('mouseup', () => {\n      return strikethroughButton.removeClass(['active'])\n    })\n    strikethroughButton.listen('click', (e) => {\n      e.preventDefault()\n      strikethroughButton.editor.focus()\n      return strikethroughButton.editor._marky.strikethrough([strikethroughButton.editor.selectionStart, strikethroughButton.editor.selectionEnd])\n    })\n\n    let codeButton = Object.create(Button)\n    codeButton.init('Code', id, 'fa', 'fa-code')\n    codeButton.editor = markyEditor.element\n    codeButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      codeButton.editor.focus()\n      return codeButton.addClass(['active'])\n    })\n    codeButton.listen('mouseup', () => {\n      return codeButton.removeClass(['active'])\n    })\n    codeButton.listen('click', (e) => {\n      e.preventDefault()\n      codeButton.editor.focus()\n      return codeButton.editor._marky.code([codeButton.editor.selectionStart, codeButton.editor.selectionEnd])\n    })\n\n    let blockquoteButton = Object.create(Button)\n    blockquoteButton.init('Blockquote', id, 'fa', 'fa-quote-right')\n    blockquoteButton.editor = markyEditor.element\n    blockquoteButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      blockquoteButton.editor.focus()\n      return blockquoteButton.addClass(['active'])\n    })\n    blockquoteButton.listen('mouseup', () => {\n      return blockquoteButton.removeClass(['active'])\n    })\n    blockquoteButton.listen('click', (e) => {\n      e.preventDefault()\n      blockquoteButton.editor.focus()\n      return blockquoteButton.editor._marky.blockquote([blockquoteButton.editor.selectionStart, blockquoteButton.editor.selectionEnd])\n    })\n\n    let linkButton = Object.create(Button)\n    linkButton.init('Link', id, 'fa', 'fa-link')\n    linkButton.editor = markyEditor.element\n    linkButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      linkButton.editor.focus()\n      return linkButton.addClass(['active'])\n    })\n    linkButton.listen('mouseup', () => {\n      return linkButton.removeClass(['active'])\n    })\n    linkButton.listen('click', (e) => {\n      e.preventDefault()\n      linkButton.editor.focus()\n      // dialog.classList.toggle('toggled')\n      // if (dialog.style.visibility === 'hidden') {\n      //   dialog.children[0].children[1].value = linkButton.editor.value.substring(linkButton.editor.selectionStart, linkButton.editor.selectionEnd)\n      //   dialog.style.visibility = 'visible'\n      //   return\n      // }\n      // dialog.style.visibility = 'hidden'\n    })\n\n    let imageButton = Object.create(Button)\n    imageButton.init('Image', id, 'fa', 'fa-file-image-o')\n    imageButton.editor = markyEditor.element\n    imageButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      imageButton.editor.focus()\n      return imageButton.addClass(['active'])\n    })\n    imageButton.listen('mouseup', () => {\n      return imageButton.removeClass(['active'])\n    })\n    imageButton.listen('click', (e) => {\n      e.preventDefault()\n      imageButton.editor.focus()\n      // dialog.classList.toggle('toggled')\n      // if (dialog.style.visibility === 'hidden') {\n      //   dialog.children[0].children[1].value = imageButton.editor.value.substring(imageButton.editor.selectionStart, imageButton.editor.selectionEnd)\n      //   dialog.style.visibility = 'visible'\n      //   return\n      // }\n      // dialog.style.visibility = 'hidden'\n    })\n\n    let unorderedListButton = Object.create(Button)\n    unorderedListButton.init('Unordered List', id, 'fa', 'fa-list-ul')\n    unorderedListButton.editor = markyEditor.element\n    unorderedListButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      unorderedListButton.editor.focus()\n      return unorderedListButton.addClass(['active'])\n    })\n    unorderedListButton.listen('mouseup', () => {\n      return unorderedListButton.removeClass(['active'])\n    })\n    unorderedListButton.listen('click', (e) => {\n      e.preventDefault()\n      unorderedListButton.editor.focus()\n      return unorderedListButton.editor._marky.unorderedList([unorderedListButton.editor.selectionStart, unorderedListButton.editor.selectionEnd])\n    })\n\n    let orderedListButton = Object.create(Button)\n    orderedListButton.init('Ordered List', id, 'fa', 'fa-list-ol')\n    orderedListButton.editor = markyEditor.element\n    orderedListButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      orderedListButton.editor.focus()\n      return orderedListButton.addClass(['active'])\n    })\n    orderedListButton.listen('mouseup', () => {\n      return orderedListButton.removeClass(['active'])\n    })\n    orderedListButton.listen('click', (e) => {\n      e.preventDefault()\n      orderedListButton.editor.focus()\n      return orderedListButton.editor._marky.orderedList([orderedListButton.editor.selectionStart, orderedListButton.editor.selectionEnd])\n    })\n\n    let outdentButton = Object.create(Button)\n    outdentButton.init('Outdent', id, 'fa', 'fa-outdent')\n    outdentButton.editor = markyEditor.element\n    outdentButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      outdentButton.editor.focus()\n      return outdentButton.addClass(['active'])\n    })\n    outdentButton.listen('mouseup', () => {\n      return outdentButton.removeClass(['active'])\n    })\n    outdentButton.listen('click', (e) => {\n      e.preventDefault()\n      outdentButton.editor.focus()\n      return outdentButton.editor._marky.outdent([outdentButton.editor.selectionStart, outdentButton.editor.selectionEnd])\n    })\n\n    let indentButton = Object.create(Button)\n    indentButton.init('Indent', id, 'fa', 'fa-indent')\n    indentButton.editor = markyEditor.element\n    indentButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      indentButton.editor.focus()\n      return indentButton.addClass(['active'])\n    })\n    indentButton.listen('mouseup', () => {\n      return indentButton.removeClass(['active'])\n    })\n    indentButton.listen('click', (e) => {\n      e.preventDefault()\n      indentButton.editor.focus()\n      return indentButton.editor._marky.indent([indentButton.editor.selectionStart, indentButton.editor.selectionEnd])\n    })\n\n    let undoButton = Object.create(Button)\n    undoButton.init('Undo', id, 'fa', 'fa-backward')\n    undoButton.editor = markyEditor.element\n    undoButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      undoButton.editor.focus()\n      return undoButton.addClass(['active'])\n    })\n    undoButton.listen('mouseup', () => {\n      return undoButton.removeClass(['active'])\n    })\n    undoButton.listen('click', (e) => {\n      e.preventDefault()\n      if (undoButton.element.classList.contains('disabled')) return\n      undoButton.editor.focus()\n      return undoButton.editor._marky.undo(1, undoButton.editor._marky.state, undoButton.editor._marky.index)\n    })\n\n    let redoButton = Object.create(Button)\n    redoButton.init('Redo', id, 'fa', 'fa-forward')\n    redoButton.editor = markyEditor.element\n    redoButton.listen('mousedown', (e) => {\n      e.preventDefault()\n      redoButton.editor.focus()\n      return redoButton.addClass(['active'])\n    })\n    redoButton.listen('mouseup', () => {\n      return redoButton.removeClass(['active'])\n    })\n    redoButton.listen('click', (e) => {\n      e.preventDefault()\n      if (redoButton.element.classList.contains('disabled')) return\n      redoButton.editor.focus()\n      return redoButton.editor._marky.redo(1, redoButton.editor._marky.state, redoButton.editor._marky.index)\n    })\n\n    let fullscreenButton = Object.create(Button)\n    fullscreenButton.init('Fullscreen', id, 'fa', 'fa-expand')\n    fullscreenButton.editor = markyEditor.element\n    fullscreenButton.listen('click', (e) => {\n      e.preventDefault()\n      fullscreenButton.element.blur()\n      container.classList.toggle('fullscreen-toggled')\n      fullscreenButton.editor.classList.toggle('fullscreen-toggled')\n      fullscreenButton.element.classList.toggle('fullscreen-toggled')\n      fullscreenButton.icon.element.classList.toggle('fa-expand')\n      fullscreenButton.icon.element.classList.toggle('fa-compress')\n      return\n    })\n    // let linkButton = new LinkButton('button', 'Link', id, [linkDialog, markyEditor])\n    // linkButton.listen('click', function () {\n    //   imageDialog.element.style.visibility = 'hidden'\n    //   imageDialog.removeClass(['toggled'])\n    //   headingDialog.element.style.visibility = 'hidden'\n    //   headingDialog.removeClass(['toggled'])\n    // })\n    // let imageButton = new ImageButton('button', 'Image', id, [imageDialog, markyEditor])\n    // imageButton.listen('click', function () {\n    //   linkDialog.element.style.visibility = 'hidden'\n    //   linkDialog.removeClass(['toggled'])\n    //   headingDialog.element.style.visibility = 'hidden'\n    //   headingDialog.removeClass(['toggled'])\n    // })\n    // let unorderedListButton = new UnorderedListButton('button', 'Unordered List', id, markyEditor)\n    // let orderedListButton = new OrderedListButton('button', 'Ordered List', id, markyEditor)\n    // let outdentButton = new OutdentButton('button', 'Outdent', id, markyEditor)\n    // let indentButton = new IndentButton('button', 'Indent', id, markyEditor)\n    // let undoButton = new UndoButton('button', 'Undo', id, markyEditor)\n    // let redoButton = new RedoButton('button', 'Redo', id, markyEditor)\n    // let fullscreenButton = new FullscreenButton('button', 'Fullscreen', id, [container, markyEditor])\n\n    // let separatorA = new Element('span')\n    // separatorA.addClass(['separator'])\n\n    // let separatorB = new Element('span')\n    // separatorB.addClass(['separator'])\n\n    // let separatorC = new Element('span')\n    // separatorC.addClass(['separator'])\n\n    // let separatorD = new Element('span')\n    // separatorD.addClass(['separator'])\n\n    // let separatorE = new Element('span')\n    // separatorE.addClass(['separator'])\n\n    toolbar.appendTo(container)\n    markyEditor.appendTo(container)\n    markyOutput.appendTo(container)\n    headingButton.appendTo(toolbar.element)\n    // separatorA.appendTo(toolbar.element)\n    boldButton.appendTo(toolbar.element)\n    italicButton.appendTo(toolbar.element)\n    strikethroughButton.appendTo(toolbar.element)\n    codeButton.appendTo(toolbar.element)\n    blockquoteButton.appendTo(toolbar.element)\n    // separatorB.appendTo(toolbar.element)\n    linkButton.appendTo(toolbar.element)\n    imageButton.appendTo(toolbar.element)\n    // separatorC.appendTo(toolbar.element)\n    unorderedListButton.appendTo(toolbar.element)\n    orderedListButton.appendTo(toolbar.element)\n    outdentButton.appendTo(toolbar.element)\n    indentButton.appendTo(toolbar.element)\n    // separatorD.appendTo(toolbar.element)\n    undoButton.appendTo(toolbar.element)\n    redoButton.appendTo(toolbar.element)\n    // separatorE.appendTo(toolbar.element)\n    fullscreenButton.appendTo(toolbar.element)\n    // dialogs.appendTo(toolbar.element)\n    // linkDialog.appendTo(dialogs.element)\n    // imageDialog.appendTo(dialogs.element)\n    // headingDialog.appendTo(dialogs.element)\n\n  //   markyEditor.listen('markyupdate', function (e) {\n  //     this._marky.update(e.target.value, [e.target.selectionStart, e.target.selectionEnd], this._marky.state, this._marky.index)\n  //     e.target.dispatchEvent(markychange)\n  //   }, false)\n\n  //   markyEditor.listen('markychange', function (e) {\n  //     let html = this._marky.state[this._marky.index].html\n  //     if (this._marky.index === 0) {\n  //       undoButton.addClass(['disabled'])\n  //     } else {\n  //       undoButton.removeClass(['disabled'])\n  //     }\n  //     if (this._marky.index === this._marky.state.length - 1) {\n  //       redoButton.addClass(['disabled'])\n  //     } else {\n  //       redoButton.removeClass(['disabled'])\n  //     }\n  //     e.target.nextSibling.value = html\n  //   }, false)\n\n  //   /**\n  //    * Listen for input events, set timeout to update state, clear timeout from previous input\n  //    */\n  //   markyEditor.listen('input', function (e) {\n  //     window.clearTimeout(timeoutID)\n  //     timeoutID = window.setTimeout(() => {\n  //       e.target.dispatchEvent(markyupdate)\n  //     }, 1000)\n  //   }, false)\n\n  //   /**\n  //    * Listen for change events (requires loss of focus) and update state\n  //    */\n  //   markyEditor.listen('change', function (e) {\n  //     e.target.dispatchEvent(markyupdate)\n  //   }, false)\n\n  //   /**\n  //    * Listen for pasting into the editor and update state\n  //    */\n  //   markyEditor.listen('paste', function (e) {\n  //     setTimeout(() => {\n  //       e.target.dispatchEvent(markyupdate)\n  //     }, 0)\n  //   }, false)\n\n  //   /**\n  //    * Listen for cutting from the editor and update state\n  //    */\n  //   markyEditor.listen('cut', function (e) {\n  //     setTimeout(() => {\n  //       e.target.dispatchEvent(markyupdate)\n  //     }, 0)\n  //   }, false)\n\n  //   let deleteSelection = 0\n\n  //   /**\n  //    * Listen for keydown events, if key is delete key, set deleteSelection to length of selection\n  //    */\n  //   markyEditor.listen('keydown', function (e) {\n  //     if (e.which === 8) deleteSelection = e.target.selectionEnd - e.target.selectionStart\n  //   })\n\n  //   let keyMap = [] // Used for determining whether or not to update state on space keyup\n  //   let punctuations = [\n  //     46, // period\n  //     44, // comma\n  //     63, // question mark\n  //     33, // exclamation point\n  //     58, // colon\n  //     59, // semi-colon\n  //     47, // back slash\n  //     92, // forward slash\n  //     38, // ampersand\n  //     124, // vertical pipe\n  //     32 // space\n  //   ]\n\n  //   /**\n  //    * Listen for keyup events, if key is space or punctuation\n  //    * (but not a space following punctuation or another space), update state and clear input timeout.\n  //    */\n  //   markyEditor.listen('keypress', function (e) {\n  //     keyMap.push(e.which)\n  //     if (keyMap.length > 2) keyMap.shift()\n  //     punctuations.forEach((punctuation) => {\n  //       if (e.which === 32 && keyMap[0] === punctuation) {\n  //         return window.clearTimeout(timeoutID)\n  //       }\n  //       if (e.which === punctuation) {\n  //         window.clearTimeout(timeoutID)\n  //         return e.target.dispatchEvent(markyupdate)\n  //       }\n  //     })\n  //   })\n\n  //   /**\n  //    * Listen for keyup events, if key is delete and it's a bulk selection, update state and clear input timeout.\n  //    */\n  //   markyEditor.listen('keyup', function (e) {\n  //     if (e.which === 8 && deleteSelection > 0) {\n  //       window.clearTimeout(timeoutID)\n  //       deleteSelection = 0\n  //       e.target.dispatchEvent(markyupdate)\n  //     }\n  //   })\n\n  //   markyEditor.listen('select', function (e) {\n  //     e.target.dispatchEvent(markyselect)\n  //   })\n\n  //   markyEditor.listen('blur', function (e) {\n  //     e.target.dispatchEvent(markyblur)\n  //   })\n\n  //   markyEditor.listen('focus', function (e) {\n  //     e.target.dispatchEvent(markyfocus)\n  //   })\n\n  //   markyEditor.listen('click', function () {\n  //     imageDialog.element.style.visibility = 'hidden'\n  //     imageDialog.removeClass(['toggled'])\n  //     linkDialog.element.style.visibility = 'hidden'\n  //     linkDialog.removeClass(['toggled'])\n  //     headingDialog.element.style.visibility = 'hidden'\n  //     headingDialog.removeClass(['toggled'])\n  //   })\n  })\n}\n","'use strict'\n\n/**\n * Handles adding and removing state\n * @param   {Array}    state      the state timeline\n * @param   {Number}   stateIndex the current state index\n * @param   {Function} fn         a function to call\n * @returns {Object}   the new timeline\n */\nexport default function (state, stateIndex, fn) {\n  state = state.slice(0, stateIndex + 1)\n  let newVersion = fn()\n  state.push(newVersion)\n  stateIndex++\n  if (stateIndex > 999) {\n    state.shift()\n    stateIndex--\n  }\n  return {state: state, index: stateIndex}\n}\n","'use strict'\n\n/**\n * Finds the first index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional starting index\n * @returns {Number} the index of the match\n */\nexport function indexOfMatch (string, regex, index) {\n  var str = (index !== null) ? string.substring(index) : string\n  var matches = str.match(regex)\n  return matches ? str.indexOf(matches[0]) + index : -1\n}\n\n/**\n * Finds the first index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional starting index\n * @returns {Number} the index of the match\n */\nexport function indicesOfMatches (string, regex, index) {\n  var str = (index !== null) ? string.substring(index) : string\n  var matches = str.match(regex)\n  var indices = []\n  matches.forEach(function (match, i) {\n    let prevIndex = indices ? indices[i - 1] : null\n    indices.push(str.indexOf(match, prevIndex + 1) + index)\n  })\n  return indices || -1\n}\n\n/**\n * Finds the last index based on a regex match\n * @param   {RegExp} regex a regex object\n * @param   {Number} index optional ending index\n * @returns {Number} the index of the match\n */\nexport function lastIndexOfMatch (string, regex, index) {\n  var str = (index !== null) ? string.substring(0, index) : string\n  var matches = str.match(regex)\n  return matches ? str.lastIndexOf(matches[matches.length - 1]) : -1\n}\n\n/**\n * Creates an array of lines separated by line breaks\n * @param   {Number} index optional ending index\n * @returns {Array}  an array of strings\n */\nexport function splitLinesBackward (string, index) {\n  var str = index ? string.substring(0, index) : string\n  return str.split(/\\r\\n|\\r|\\n/)\n}\n\n/**\n * Creates an array of lines split by line breaks\n * @param   {Number} index optional starting index\n * @returns {Array}  an array of strings\n */\nexport function splitLines (string, index) {\n  var str = index ? string.substring(index) : string\n  return str.split(/\\r\\n|\\r|\\n/)\n}\n\n/**\n * Finds the start of a line\n * @param   {Number} index  optional position\n * @returns {Number} the index of the line start\n */\nexport function startOfLine (string, index = 0) {\n  return lastIndexOfMatch(string, /^.*/gm, index)\n}\n\n/**\n * Finds the end of a line\n * @param   {Number} index  optional position\n * @returns {Number} the index of the line end\n */\nexport function endOfLine (string, index = 0) {\n  return indexOfMatch(string, /(\\r|\\n|$)/gm, index)\n}\n"],"sourceRoot":"/source/"}